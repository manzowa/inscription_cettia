<?php

/**
 * @file
 * Contains inscription_cettia.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\inscription_cettia\InscriptionCaptcha;
use Drupal\inscription_cettia\InscriptionManager;
use Drupal\user\RoleInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Form\FormState;
use Symfony\Component\HttpFoundation\Request;

/**
 * Implements hook_help().
 */
function inscription_cettia_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the inscription_cettia module.
    case 'help.page.inscription_cettia':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module allows registration and connection in the user account') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter() 
 */
 function inscription_cettia_form_alter(&$form,FormStateInterface $form_state, $form_id){
    
    $inscriptionCaptcha = new InscriptionCaptcha(); // captcha
    $roles = user_role_names(TRUE);
    $account = \Drupal::currentUser();

    if($form_id =='user_login_form' || $form_id == 'user_form' || $form_id == 'user_register_form' || $form_id == 'user_pass'){
        if($form_id == 'user_login_form'){

        }else if($form_id =='user_register_form'){ // form enregistremen
		   
            $form['account']['nom'] = array(
		          '#type' => 'textfield',
		          '#title' => t('Nom'),
		          '#default_value' => '',	
		          '#required' => TRUE,
		          '#attributes' => array('placeholder' => t('Nom...')),
		          '#weight' => 0,
		          '#description' => t("Important: le fonctionnement du site nécessite une inscription individuelle, avec une identité réèlle. Les observations pourront être liées à une structure lors de la saisie."),
            );
            $form['account']['prenom'] = array(
		          '#type' => 'textfield',
	              '#title' => t('Prénom'),
		          '#default_value' => '',	
		          '#required' => TRUE,
		          '#attributes' => array('placeholder' => t('Prénom...')),
		          '#weight' => 1,
	        );
			$form['account']['name'] = array(
		          '#type' => 'hidden',
		          '#title' => t('Username'),
		          '#default_value' => '',	
		          '#required' => FALSE,
				  '#weight' => 2,
            );
			$form['account']['titre_charte'] = array(
			      '#type' => 'item',
			      '#required' => FALSE, 
		          '#title' => t('Conditions générales d’utilisation de Cettia-IdF '),
                  '#weight' => 3,
		    );
			$form['account']['body_charte'] = array(
			      '#type' => 'textarea',
			      '#required' => FALSE,
                  '#weight' => 4,
		    );
			$form['account']['approuve_charte'] = array(
			      '#type' => 'checkbox',
			      '#required' => TRUE,
		          '#title' => t('Approbation de la charte.'),
			      '#title_display' => 'invisible', //'before',
		          '#field_suffix' => t("j'ai lu et j'approuve la charte d'utilisation présentée ci-dessus."),
                  '#weight' => 5,
	         );
			$form['account']['mail'] = array(
		          '#type' => 'email',
		          '#title' => t('Email address'),
		          '#default_value' => '',	
		          '#required' => TRUE,
                  '#description' => t("Une adresse électronique valide. Le système enverra tous les courriels à cette adresse. L'adresse électronique ne sera pas rendue publique et ne sera utilisée que pour la réception d'un nouveau mot de passe ou pour la réception de certaines notifications désirées."),
                  '#weight' => 6,
            );
            $nom_image = null;
            if(!empty($form_state->getValue('num_antispam'))){
		            $nom_image = $form_state->getValue('num_antispam');
		            $old = drupal_get_path('module', 'inscription_cettia').'/images/'.$nom_image;
		            $nom_image = uniqid("images_",true);
	             	$new = drupal_get_path('module', 'inscription_cettia').'/images/'.$nom_image;
		
		            if(file_exists($old.'.jpg') === false || file_exists($old.'.php') === false
		            || rename($old.'.jpg', $new.'.jpg') == false || rename($old.'.php', $new.'.php') == false){
		          	    $nom_image = null;
		            }
	        } 
            if(empty($nom_image)){
	              $nom_image = $inscriptionCaptcha->creerImageCaptcha();
	          }
            global $base_url;
            $nom_image = $base_url.'/'.drupal_get_path('module', 'inscription_cettia').'/images/'.$nom_image.'.jpg';
            $form['account']['num_antispam'] = array(
		          '#type' => 'hidden',
		          '#value' => $nom_image,	
	        );
		    $form['account']['quest_antispam'] = array(
	              '#type' => 'textfield',
	              '#title' => t("ANTISPAM : code déduit du texte à droite:"),
		          '#required' => TRUE,
	              '#weight' => 7,
				  '#prefix' => '<img style="float:right;margin-left:8px;border-radius:0.5em;" src="'.$nom_image.'">',
		          '#suffix' => '<p style="clear:both;">&nbsp;</p>',
	        );
        }else if($form_id == 'user_pass'){  // form password forget
			 drupal_set_message('WELCOME '.$form_id); 
	
             $form['name'] = array(
                   '#type' => 'textfield',
                   '#title' => t('Email'),
                   '#size' => 60,
                   '#required' => TRUE,
                   '#attributes' => array(
                        'autocorrect' => 'off',
                        'autocapitalize' => 'off',
                        'spellcheck' => 'false',
                        'autofocus' => 'autofocus',
                    ),
             );
             $form['actions'] = array('#type' => 'actions');
             $form['actions']['submit'] = array('#type' =>'submit', '#value' =>t('Envoyer nouveau mot de passe par courriel'));
       }else if( $form_id =='user_form'){ // user profile
			drupal_set_message('WELCOME '.$form_id);

			$params = UrlArray();
			$user_id= (int) $params[2];
			$obseurs = manager()->getNomAndPrenomById($user_id);
			$user = null;
			foreach($obseurs as $item){ $user = $item;break;}

			$form['account']['nom'] = array(
		          '#type' => 'textfield',
		          '#title' => t('Nom'),
		          '#default_value' => $user->nom,	
		          '#required' => TRUE,
		          '#attributes' => array('placeholder' => t('Nom...')),
		          '#weight' => 0,
		          '#description' => t("Important: le fonctionnement du site nécessite une inscription individuelle, avec une identité réèlle. Les observations pourront être liées à une structure lors de la saisie."),
            );
            $form['account']['prenom'] = array(
		          '#type' => 'textfield',
	              '#title' => t('Prénom'),
		          '#default_value' => $user->prenom,	
		          '#required' => TRUE,
		          '#attributes' => array('placeholder' => t('Prénom...')),
		          '#weight' => 0,
	        );
	   } 
    }
 }

/**
 * Implements hook_user_presave()
 *
 * This hook is invoked before the user account is saved to the database.
 */
function inscription_cettia_user_presave($account){
	$form_state = new FormState();
	$request = \Drupal::request()->request;
	$nom= !empty($request->get('nom')) ? trim($request->get('nom')) : null;
	$prenom= !empty($request->get('prenom'))? trim($request->get('prenom')) : null;
	$email = $account->getEmail();

	$count = 1;
   	$username = $nom.' '.$prenom;
    $original_username =$nom.' '.$prenom;

	while (user_load_by_name($username)) { // If user exist, add number in the end.
	    $username = $original_username.$count++;
   	}
	$account->setUsername($username);
	$account->activate();
}

/**
  * Implements hook_user_insert()
  */
function inscription_cettia_user_insert($account){
	  // Provisional this of part.
      $roles = user_role_names(TRUE); // Get all roles that are available.
      $bundle = $account->bundle();
      $deleted = 0;
      $entity_id  = $account->id();
      $revision_id = $account->id();
      $langcode= $account->getPreferredLangcode();
      $delta = 0;
      $roles_target_id = array_search('saisie cettia', $roles);

	  // insert roles
      if($roles_target_id !== false){
          manager()->roles($bundle,$deleted, $entity_id, $revision_id, $langcode, $delta, $roles_target_id);
      }

	  $form_state = new FormState();
	  $request = \Drupal::request()->request;
      $id = $account->id();
	  $nom= !empty($request->get('nom')) ? trim($request->get('nom')) : null;
	  $prenom= !empty($request->get('prenom'))? trim($request->get('prenom')) : null;
	  $email = $account->getEmail();
      manager()->Add($id,$nom,$prenom, $email); // CT_user_obseurs;
} 

/**
 *  Implements hook_user_update 
 */
function inscription_cettia_user_update(Drupal\Core\Session\AccountInterface $account){
	drupal_set_message('WELCOME to update');
	$request = \Drupal::request()->request;
	$params = UrlArray();
	$user_id= (int) $params[2];
	$nom= !empty($request->get('nom')) ? trim($request->get('nom')) : null;
	$prenom= !empty($request->get('prenom'))? trim($request->get('prenom')) : null;
	$mail =!empty($request->get('mail'))? trim($request->get('mail')) : null;
	manager()->Update($user_id,$nom, $prenom, $mail); // update  CT_user_obseurs;
}

/**
 * Implements hook_honeypot_time_limit
 */
function inscription_cettia_honeypot_time_limit($honeypot_time_limit, $form_values, $number){

	// instanciation et declaration de vairables
	$captcha = \Drupal::service('inscription.captcha');
	$form_state = new FormState();
	$request = \Drupal::request()->request;
	global $base_url; 
	$additions = 0;
	var_dump($request);

	if(isset($form_values) && isset($form_values['quest_antispam'])){

		$input_num_atsp = $request->get('num_antispam');
		$num_atsp = trim(basename($input_num_atsp, ".jpg").PHP_EOL);
		$rep_user = $form_values['quest_antispam'];
		$rep_user = strtolower($rep_user);
		$php_file = "images/".$num_atsp.".php";
	    $reponse = null;
		include $php_file; 	//Inclusion file php
		$honeypot_time = $form_values['honeypot_time'];

		$test_rep = $request->get('');

		drupal_set_message(''. print_r($rep_user, TRUE) .'');
		drupal_set_message(''. print_r($reponse, TRUE) .'');
		drupal_set_message(''. print_r($test_rep, TRUE) .'');

		if(!isset($form_values['honeypot_time']) || !is_numeric($form_values['honeypot_time']) 
			|| $form_values['honeypot_time'] > time()){

			$honeypot_time = time();
			$honeypot_time_limit = $honeypot_time_limit + 100;
		}
		$honeypot_delai = time()- $honeypot_time - $honeypot_time_limit;

		if(empty($reponse) || empty($rep_user)  || $reponse != $rep_user ){

		    $captcha->creerImageCaptcha();
			$form_state->setErrorByName('quest',t( 'Erreur Antispam.'));
		    drupal_set_message(t('Erreur antispam.'), 'error');
			\Drupal::logger('INSCRIPTION cettia')->error('antispam erreur (%antispam - %antispam2).',
				  array('%antispam' => $reponse, '%antispam2' => $rep_user)
			);
			$additions = 2 * ($number+1);
		} 
	}
	return $additions;  
}

 /**
  * Implements hook_cron()
  */
function inscription_cettia_cron(){
	$path = drupal_get_path('module', 'inscription_cettia')."/images/";
	if(is_dir($path)){
		$rep = opendir($path);
		while($file = readdir($rep)){
			if($file != '..' && $file !='.' && $file !=''){
				unlink($path.$file);
			}
		}
	 	closedir ($rep);
	}
}

/**
 * use a service manager 
 */
function manager(){
  $service_manger = \Drupal::service('inscription.manager');
  return  $service_manger;
}

/**
 * Get array url
 * Falcultatif
 */
function UrlArray(){
	$current_path = \Drupal::service('path.current')->getPath();
	$path_args = explode('/', $current_path);
	return $path_args;
}
